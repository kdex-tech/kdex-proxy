{"version":3,"file":"index.mjs","sources":["../src/app-route.ts","../src/index.ts"],"sourcesContent":["import {createBrowserHistory, History} from \"history\";\n\nclass AppRouteItem {\n  constructor(\n    private config: {\n      host?: HTMLElement;\n      id: string;\n      path: string;\n    }\n  ) {\n    this.host = config.host;\n    this.id = config.id;\n    this.path = config.path;\n  }\n\n  host?: HTMLElement;\n  id: string;\n  path: string;\n}\n\nclass AppRouteRegistry {\n  private items: AppRouteItem[] = [];\n  private callbacks: ((items: AppRouteItem[]) => void)[] = [];\n  public readonly pathSeparator: string;\n  private history: History;\n\n  constructor() {\n    const pathSeparator = document.querySelector('html head meta[name=\"path-separator\"]');\n    this.pathSeparator = pathSeparator?.getAttribute('content') || '/_/';\n    this.history = createBrowserHistory();\n    this.history.listen(() => {\n      this._doNavigation();\n    });\n\n    document.addEventListener(\"DOMContentLoaded\", this._resetNavigationLinks.bind(this));\n    document.addEventListener(\"DOMContentLoaded\", this._doNavigation.bind(this));\n  }\n\n  _doNavigation(): void {\n    const currentRoute = this.currentRoutepath();\n    const hosts = new Set(this.getItems().map(item => item.host).filter(host => host !== undefined));\n\n    for (const host of hosts) {\n      if (currentRoute && host.id === currentRoute.id) {\n        host.setAttribute('route-path', `/${currentRoute.path}`);\n      }\n      else {\n        host.setAttribute('route-path', '');\n      }\n    }\n  }\n\n  _resetNavigationLinks(): void {\n    for (let link of document.querySelectorAll('a')) {\n      if (link.href.startsWith(document.location.origin + this.basepath())) {\n        const url = new URL(link.href);\n        link.onclick = () => {\n          this.history.push(url.pathname);\n          return false;\n        };\n        link.href = 'javascript:void(0)';\n      }\n    }\n  }\n\n  addItem(item: AppRouteItem): void {\n    this.items.push(item);\n    this.callbacks.forEach(callback => callback(this.items));\n  }\n\n  basepath(): string {\n    if (window.location.pathname.includes(this.pathSeparator)) {\n      return window.location.pathname.split(this.pathSeparator, 2)[0];\n    }\n    if (window.location.pathname.endsWith('/')) {\n      return window.location.pathname.slice(0, -1);\n    }\n    return window.location.pathname;\n  }\n\n  currentRoutepath(): AppRouteItem | null {\n    if (window.location.pathname.includes(this.pathSeparator)) {\n      const routePath = window.location.pathname.split(this.pathSeparator, 2)[1];\n\n      const [id, path] = routePath.split('/', 2);\n      return new AppRouteItem({\n        id,\n        path,\n      });\n    }\n\n    return null;\n  }\n\n  findItem(id: string, path: string): AppRouteItem | null {\n    return this.items.find(item => item.id === id && item.path === path) || null;\n  }\n\n  getItems(): AppRouteItem[] {\n    return this.items;\n  }\n\n  navigate(location: string): void {\n    this.history.push(location);\n  }\n\n  onItemAdded(callback: (items: AppRouteItem[]) => void): void {\n    this.callbacks.push(callback);\n  }\n\n  registerRoutes(host: HTMLElement, ...paths: string[]): void {\n    for (const path of paths) {\n      this.addItem(new AppRouteItem({\n        host,\n        id: host.id,\n        path,\n      }));\n    }\n  }\n\n  removeItem(item: AppRouteItem): void {\n    this.items = this.items.filter(i => i !== item);\n    this.callbacks.forEach(callback => callback(this.items));\n  }\n}\n\nconst appRouteRegistry = new AppRouteRegistry();\n\nexport { AppRouteItem, AppRouteRegistry, appRouteRegistry };","import { AppRouteItem, AppRouteRegistry, appRouteRegistry } from './app-route';\n\nclass AppContainerElement extends HTMLElement {\n  private appContainerTemplate: HTMLTemplateElement;\n\n  constructor() {\n    super();\n\n    this.appContainerTemplate = document.createElement(\"template\");\n    this.appContainerTemplate.innerHTML = `\n    <slot><em>Application Container (placeholder)</em></slot>\n    `;\n  }\n\n  static elementName(): string {\n    return 'kdex-ui-app-container';\n  }\n\n  connectedCallback(): void {\n    const shadowRoot = this.attachShadow({ mode: \"closed\" });\n    shadowRoot.appendChild(this.appContainerTemplate.content.cloneNode(true));\n  }\n}\n\nclass AppElement extends HTMLElement {\n  public routePath: string | null = null;\n\n  constructor() {\n    super();\n\n    const parent = this.parentElement;\n    if (!(parent instanceof AppContainerElement)) {\n      throw new Error('Parent AppContainerElement not found');\n    }\n  }\n\n  static get observedAttributes(): string[] {\n    return ['route-path'];\n  }\n\n  attributeChangedCallback(name: string, oldValue: string | null, newValue: string | null): void {\n    if (name === 'route-path') {\n      this.routePath = newValue;\n    }\n    this.connectedCallback();\n  }\n  \n  basepath(): string {\n    return appRouteRegistry.basepath();\n  }\n\n  connectedCallback(): void {\n    // Default implementation - can be overridden by subclasses\n  }\n\n  navigate(path: string): void {\n    if (!path.startsWith('/')) {\n      path = `/${path}`;\n    }\n    appRouteRegistry.navigate(`${this.basepath()}${appRouteRegistry.pathSeparator}${this.id}${path}`);\n  }\n\n  registerRoutes(...paths: string[]): void {\n    if (this.id) {\n      appRouteRegistry.registerRoutes(this, ...paths);\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'kdex-ui-app-container': AppContainerElement;\n  }\n}\n\nif (!customElements.get(AppContainerElement.elementName())) {\n  customElements.define(AppContainerElement.elementName(), AppContainerElement);\n}\n\nexport {\n  AppContainerElement,\n  AppElement,\n  AppRouteItem,\n  AppRouteRegistry,\n  appRouteRegistry\n}; "],"names":["AppRouteItem","config","AppRouteRegistry","pathSeparator","createBrowserHistory","currentRoute","hosts","item","host","link","url","callback","routePath","id","path","location","paths","i","appRouteRegistry","AppContainerElement","AppElement","name","oldValue","newValue"],"mappings":"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"}