# Copyright 2025 KDex Tech
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy
  labels:
    app: proxy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: proxy
  template:
    metadata:
      labels:
        app: proxy
    spec:
      initContainers:
      - name: package-dependencies
        image: registry:5000/package-dependencies
        command:
        - "sh"
        - "-c"
        - |
          [ $(wc -l < /modules/sums.txt) -eq 2 ] && sha256sum -c /modules/sums.txt 2&>/dev/null
          if [ $? -ne 0 ]; then
            rm -rf /modules/* 2&>/dev/null
            cp kdex-ui.tgz /tmp
            cp package.json /tmp
            (
              cd /tmp
              npm i
              npm i ./kdex-ui.tgz
              npm i --save-dev esbuild
              npx esbuild node_modules/**/*.js --allow-overwrite --outdir=node_modules --define:process.env.NODE_ENV=\"production\"
              cp -r node_modules/* /modules
            )
            sha256sum kdex-ui.tgz package.json > /modules/sums.txt
            ls -l /modules
          fi
        volumeMounts:
        - mountPath: /modules
          name: proxy-pvc
          subPath: modules
        - mountPath: /app/package.json
          name: proxy-config
          subPath: package.json
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
      containers:
      - name: bash
        # For testing. So we can exec in to see the contents of /modules.
        image: bash
        command:
        - "/usr/local/bin/bash"
        - "-c"
        - |
          trap 'echo "Received signal, exiting..."; exit 0' SIGINT SIGTERM
          sleep infinity &
          wait $!
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
        volumeMounts:
        - mountPath: /modules
          name: proxy-pvc
          subPath: modules
        - mountPath: /etc/kdex-proxy/config.json
          name: proxy-config
          subPath: config.json
      - name: proxy
        image: registry:5000/kdex-tech/proxy:latest
        # Add delve debugging
        args:
        - --continue
        - --listen=:2345
        - --headless=true
        - --api-version=2
        - --log=true
        - --accept-multiclient
        - --check-go-version=false
        - --only-same-user=false
        - exec
        - /proxy
        ports:
        - name: main
          containerPort: 8080
        - name: debug
          containerPort: 2345
        resources:
          limits:
            cpu: 500m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /~/probe
            port: 8080
          failureThreshold: 1000
          initialDelaySeconds: 5
          periodSeconds: 2
        readinessProbe:
          httpGet:
            path: /~/probe
            port: 8080
          failureThreshold: 1000
          initialDelaySeconds: 5
          periodSeconds: 2
        securityContext:
          capabilities:
            add: ["SYS_PTRACE"]
        startupProbe:
          httpGet:
            path: /~/probe
            port: 8080
          failureThreshold: 1000
          initialDelaySeconds: 5
          periodSeconds: 2
        volumeMounts:
        - mountPath: /cache
          name: proxy-pvc
          subPath: cache
        - mountPath: /modules
          name: proxy-pvc
          subPath: modules
        - mountPath: /etc/kdex-proxy/proxy.config
          name: proxy-config
          subPath: proxy.config
      volumes:
      - name: proxy-pvc
        persistentVolumeClaim:
          claimName: proxy-pvc
      - name: proxy-config
        configMap:
          name: proxy-config
      securityContext:
        fsGroup: 65532
        runAsNonRoot: true
        runAsUser: 65532
        runAsGroup: 65532
