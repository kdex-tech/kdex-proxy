apiVersion: v1
kind: ConfigMap
metadata:
  name: keycloak-config
data:
  KC_BOOTSTRAP_ADMIN_USERNAME: admin
  KC_BOOTSTRAP_ADMIN_PASSWORD: admin
  KC_HEALTH_ENABLED: "true"
  KC_HOSTNAME_STRICT: "false"
  KC_HOSTNAME_STRICT_HTTPS: "false"
  KC_HTTP_ENABLED: "true"
  
  # Realm configuration
  realm.json: |
    {
      "realm": "KDEX Proxy",
      "defaultSignatureAlgorithm": "RS256",
      "enabled": true,
      "registrationAllowed": false,
      "clients": [
        {
          "clientId": "kdex-proxy",
          "name": "KDEX Proxy",
          "description": "KDEX Proxy",
          "rootUrl": "http://proxy.docker.localhost",
          "baseUrl": "http://proxy.docker.localhost",
          "surrogateAuthRequired": false,
          "enabled": true,
          "clientAuthenticatorType": "client-secret",
          "secret": "FZd8qsIive63taCdU3y3fARCCMU1SCUS",
          "redirectUris": [
            "http://proxy.docker.localhost/~/o/oauth/callback"
          ],
          "webOrigins": ["*"]
          "standardFlowEnabled": true,
          "implicitFlowEnabled": false,
          "directAccessGrantsEnabled": true,
          "serviceAccountsEnabled": true,
          "authorizationServicesEnabled": true,
          "publicClient": false,
          "protocol": "openid-connect",
          "attributes": {
            "realm_client": "false",
            "oidc.ciba.grant.enabled": "false",
            "client.secret.creation.time": "1739029422",
            "backchannel.logout.url": "http://proxy.docker.localhost/~/o/oauth/back_channel_logout",
            "backchannel.logout.session.required": "true",
            "post.logout.redirect.uris": "http://proxy.docker.localhost/*##http://proxy.docker.localhost",
            "oauth2.device.authorization.grant.enabled": "false",
            "display.on.consent.screen": "false",
            "backchannel.logout.revoke.offline.tokens": "true"
          },
        }
      ],
      "roles": {
        "realm": [
          {
            "name": "user",
            "description": "Regular user role"
          },
          {
            "name": "admin",
            "description": "Administrator role"
          }
        ]
      }
    }
